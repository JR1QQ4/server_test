1、渗透测试之信息收集
- 在信息收集中，最主要的就是收集服务器的配置信息和网站的敏感信息，其中包括域名及子域名信息、目标网站系统、CMS指纹、目标网站真实IP、开放的端口等
- 收集域名信息
    - 第一步，获取域名的注册信息，包括DNS服务器信息和注册人的联系信息等，常用方法如下：
        - ①Whois查询
            - 在Kali系统中，可以使用命令`whois www.baidu.com`
            - 在线常用网站有爱站工具网（https://www.aizhan.com/）、站长之家（http://whois.chinaz.com/）、VirusTotal(https://www.virustotal.com/)
        - ②备案信息查询
            - ICP备案查询网：https://beian.miit.gov.cn/#/Integrated/recordQuery
            - 站长工具：http://icp.chinaz.com/
            - 天眼查：https://www.tianyancha.com/
- 收集敏感信息
    - Google搜索常用语法，可以多个一起使用
        - Site —— 制定域名
        - Inurl —— URL中存在关键字的网页
        - Intext —— 网页正文中的关键字
        - Filetype —— 制定文件类型
        - Intitle —— 网页标题中的关键字
        - link —— link:baidu.com即表示返回所有和baidu.com做了链接的URL
        - Info —— 查找指定站点的一些基本信息
        - cache —— 搜索Google你关于某些内容的缓存
- 收集子域名信息
    - 1）子域名检测工具：Layer子域名挖掘机、K8、wydomain、Sublist3r、dnsmaper、subDomainsBrute、Maltego CE等
    - 2）搜索引擎枚举：site:baidu.com
    - 3）第三方聚合应用枚举：使用DNSdumpster、在线DNS侦查和搜索的工具挖掘出指定域潜藏的大量子域
    - 4）证书透明度公开日志枚举：https://crt.sh 和 https://censys.io
- 收集常用端口信息
    - 扫描工具：Nmap、Masscan、ZMap和御剑高速TCP端口扫描工具
    - 常见端口
        - 文件共享服务端口
            - 21/22/69 —— Ftp/Tftp文件传输协议，攻击方向——允许匿名的上传、下载、爆破和嗅探操作
            - 2049 —— Nfs服务，攻击方向——配置不当
            - 139 —— Samba服务，攻击方向——爆破、未授权访问、远程代码执行
            - 389 —— Ldap目录访问协议，攻击方向——注入、允许匿名访问、弱口令
        - 远程连接服务端口
            - 22 —— SSH远程连接，攻击方向——爆破、SSH隧道及内网代理转发、文件传输
            - 23 —— Telnet远程连接，攻击方向——爆破、嗅探、弱口令
            - 3389 —— Rdp远程桌面连接，攻击方向——Shift后门（需要Windows Server2003以下的系统）、爆破
            - 5900 —— VNC，攻击方向——弱口令爆破
            - 5632 —— PyAnywhere服务，攻击方向——抓密码、代码执行
        - Web应用服务端口
            - 80/443/8080 —— 常见的Web服务端口，攻击方向——Web攻击、爆破、对应服务器版本漏洞
            - 7001/7002 —— WebLogic控制台，攻击方向——Java反序列化、弱口令
            - 8080/8089 —— Jboss/Resin/Jetty/Jenkins，攻击反序——反序列化、控制台弱口令
            - 9090 —— WebSphere控制台，攻击方向——Java反序列化、弱口令
            - 4848 —— GlassFish控制台，攻击方向——弱口令
            - 1352 —— Lotus domino邮件服务，攻击方向——弱口令、信息泄露、爆破
            - 10000 —— Webmin-Web控制面板，攻击方向——弱口令
        - 数据库服务端口
            - 3306 —— MySQL，攻击方向——注入、提权、爆破
            - 1433 —— MSSQL，攻击方向——注入、提权、SA弱口令、爆破
            - 1521 —— Oracle，攻击方向——TNS爆破、注入、反弹Shell
            - 5432 —— PostgreSQL，攻击方向——爆破、注入、弱口令
            - 27017/27018 —— MongoDB，攻击方向——爆破、未授权访问
            - 6379 —— Redis，攻击方向——可尝试未授权访问、弱口令爆破
            - 50000 —— SysBase/DB2，攻击方向——爆破、注入
        - 邮件服务端口
            - 25 —— SMTP邮件服务，攻击方向——邮件伪造
            - 110 —— POP3协议，攻击方向——爆破、嗅探
            - 143 —— IMAP协议，攻击方向——爆破
        - 网络常见协议端口
            - 53 ——　DNS —— 允许区域传送、DNS劫持、缓存投毒、欺骗
            - 67/68 —— DHCP —— 劫持、欺骗
            - 161 —— SNMP —— 爆破、收集目标内网信息
        - 特殊服务端口
            - 2181 —— Zookeeper —— 未授权访问
            - 8069 —— Zabbix —— 远程执行、SQL注入
            - 9200/9300 —— Elasticsearch —— 远程执行
            - 11211 —— Memcache ——　未授权访问
            - 512/513/514 —— Linux Rexec —— 匿名访问、文件上传
            - 3690 —— Svn —— Svn泄露、未授权访问
            - 50000 —— SAP Management Console —— 远程执行
- 指纹识别
    - 指的是网站CMS指纹识别、计算机操作系统及Web容器的指纹识别等
    - 应用程序一般在html、css、js等文件中多多少少包含一些特征码，比如WordPress在robots.txt中包含wp-admin
    - CMS（Content Management System）又称整站系统或文章系统，常见的有Dedecms织梦、Discuz、PHPWEB、PHPWind、PHPCMS、帝国、WordPress等
    - 代表工具有御剑Web指纹识别、WhatWeb、WebRobo、椰树、轻量WEB指纹识别等
    - 网站查询CMS指纹识别：BugScaner、云悉指纹、WhatWeb
- 查找真实IP
    - 如果目标服务器不存在CDN，可以直接通过www.ip138.com获取目标的一些IP及域名信息
    - 1）目标服务器存在CDN
        - CDN即内容分发网络，主要解决应传输距离和不同运营商节点造成的网络速度性能低下的问题；就是一组在不同运营商之间的对接节点上的高速缓存服务器，
        把用户经常访问的静态数据资源直接缓存到节点服务器上，当用户再次请求时，会直接分发到在离用户近的节点服务器上响应给用户，当用户有实际数据交互时
        才会从远程Web服务器上响应，这样可以大大提高网站的响应速度及用户体验
        - 如果购买了CDN服务，直接ping目标的域名，得到的并非真正的目标Web服务器
    - 2）判断目标是否使用了CDN
        - ping目标主域，观察域名的解析情况，以此来判断是否使用了CDN
        - 利用在线网站17CE进行全国多地区的ping服务器操作，然后对比每个地区ping出的IP结果，如果IP大多不太一样或者规律性钱，可以尝试查询这些IP的归属地来判断
    - 3）绕过CDN寻找真实IP
        - 内部邮箱源。一般的邮件系统都在内部，没有经过CDN的解析，通过目标网站用户注册或者RSS订阅功能，查看邮件、寻找邮件头中的邮件服务器域名IP，
        ping这个邮件服务器的域名，就可以获得目标的真实IP（注意，必须时目标自己的邮件服务器，第三方或公共邮件服务器是没有用的）
        - 扫描网站测试文件，如phpinfo、test等，从而找到目标的真实IP
        - 分站域名。主站都是挂CDN的，但是分站可能没有挂CDN，可以通过ping二级域名获取分站IP，可能会出现分站和主站不是同一个IP但在同一个C段下面的
        情况，从而判断出目标的真实IP段
        - 国外访问。国内的CDN往往只对国内用户的访问加速，而国外的CDN就不一定了。通过国外在线代理网站App Synthetic Monitor访问，可能会得到
        真实的IP
        - 查询域名的解析记录。通过网站NETCRAFT来观察域名的IP历史记录，也可以大致分析出目标的真实IP段
        - 如果目标网站有自己的App，可以尝试利用Fiddler或BurpSuite抓取App的请求，从里面找到目标的真实IP
        - 绕过CloudFlare CDN查找真实IP。如果网站使用CloudFlare提供的CDN服务，在确定目标网站使用CDN后，可以先尝试通过在线网站Cloud FlareWatch
        对CloudFlare客户网站进行真实IP查询
    - 4）验证获取的IP
        - 最简单的验证方法是直接尝试用IP访问，看看响应的页面是不是和访问域名返回的一样
        - 或者在目标段比较大的情况下，借助类似Masscan的工具批扫描对应IP段中所有开了80、443、8080端口的IP，然后逐个尝试IP访问，观察响应结果是否为目标站点
- 收集敏感目录文件
	- 针对网站目录的扫描主要有DorBuster、御剑后台扫描珍藏版、wwwscan、Spinder.py（轻量级快速单文件目录后台扫描）、Sensitivefilescan（轻量级快速单文件目录
	后台扫描）、Weakfilescan（轻量级快速单文件目录后台扫描）等
- 社会工程学
	- 社工库

2、搭建漏洞环境及实战
- 环境搭建
    - Linux：LANMP（Linux+Apache+Nginx+MySQL+PHP）
    - Windows：xampp（Apache+MySQL+PHP+PERL） 或 WAMP（Apache+MySQL+PHP）
    - 安装DVWA，一款开源的渗透测试漏洞练习平台，其中包含XSS、SQL注入、文件上传、文件包含、CSRF和暴力破解等各个难度的测试环境
        - 在http://127.0.0.1/phpMyAdmin/中创建名为“dvwa”的数据库
        - 修改config文件下的config.inc.php中数据库的用户名、密码、数据库名
        - 修改完后，把dvwa文件放到www目录下，打开http://127.0.0.1/setup.php
        - 在安装过程中可能出现红色的Disabled，修改PHP安装目录中的php.ini文件，修改对应的属性Off/On
    - 安装sqli-labc，一款学习SQL注入的开源平台，共有75中不同类型的注入
        - 在http://127.0.0.1/phpMyAdmin/中创建名为“security”的数据库
        - 打开sql-connections文件夹中的db-creds.inc文件，可以修改数据库的账号、密码、库名等配置信息
        - 在www目录中创建了sql1文件夹，并把代码放在该目录下
        - 访问127.0.0.1/sql1/，点击“Setup/reset Database for labs”
    - 安装xsser.me，测试XSS漏洞获取cookie并接收Web页面的平台，XSS可以做JS能做的所有事，包括但不限于窃取cookie、后台增删改文章、钓鱼、
    利用XSS漏洞进行传播、修改网页代码、网站重定向、获取用户信息（如浏览器信息、IP地址）等
        - 进入MySQL管理界面中phpMyAdmin界面，新建一个XSS平台的数据库，如xssplatform，设置其用户名和密码
        - 修改config.php中的数据库连接字段，包括用户名、密码和数据库名，访问XSS平台的URL地址，将注册配置中的invite改为normal
        - 进入MySQL管理中的phpMyAdmin，选择XSS平台的数据库，带入源码包中的xssplatform.sql文件，然后执行以下SQL，将数据库中原有的URL地址
        修改为自己使用的URL，同时，也需要将authtest.php中的网址代码替换为自己的URL
            - UPDATE ox_module SET code=REPLACE(code, 'http://xsser.me', 'http://yourdomain/xss')
        - 访问XSS平台的URL，首先注册用户，然后再phpMyAdmin里选择oc_user，将注册用户的adminLevel改为1，再将config.php注册配置中的
        normal改为invite（使用邀请码注册，即关闭开放注册的功能）
        - 需要配置伪静态文件（.htaccess），在平台根目录下创建.htaccess文件
        - 使用注册的账号登录XSS平台，创建项目

3、常用的渗透测试工具
- SQLMap
    - 一个自动化的SQL注入工具，主要功能是扫描、发现并利用给定URL的SQL注入漏洞，支持MySQL、Oracle、PostgreSQL、SQL Server、
Microsoft Access、IBM DB2、SQLite、Firebird、Sybase和SAP MaxDB.SQLMap采用了以下的SQL注入技术：
        - 基于布尔类型的盲注，即可以根据返回页面判断条件真假的注入
        - 基于时间的盲注，即不能根据页面返回的内容判断任何信息，要用条件语句查看时间延迟语句是否已执行（即页面返回时间是否增加）来判断
        - 基于报错注入，即页面会返回错误信息，或者把注入的语句的结果直接返回到页面中
        - 联合查询注入，在可以使用Union的情况下的注入
        - 堆查询注入，可以同时执行多条语句时的注入
    - 安装SQLMap，需要Python2环境
    - 使用
        - 1）判断是否存在注入。假设目标注入点是http://192.168.1.104/sql1/Less-1/?id=11，
        命令sqlmap.py -u http://192.168.1.104/sql1/Less-1/?id=1，多个参数需要加双引号
        - 2）判断文本中的请求是否存在注入，sqlmap.py -r desktop/1.txt，r一般在存在cookie注入时使用
        - 3）查询当前用户下的所有数据库，sqlmap.py -u http://192.168.1.104/sql/Less-1?id=1 [--dbs|-D xxx]，在xxx数据库中查询
        - 4）获取数据库中的表名，sqlmap.py -u "http://192.168.1.7/sql/union.php?id=1" -D dkeye [--tables|-T]
        - 5）获取表中的字段名，sqlmap.py -u "http://192.168.1.7/sql/union.php?id=1" -D dkeye -T user_info --columns
        - 6）获取字段内容，sqlmap.py -u "http://192.168.1.7/sql/unoin.php?id=1" -D dkeye -T user_info -C username,password --dump
        - 7）获取数据库的所有用户，sqlmap.py -u "http://192.168.1.7/sql/union.php?id=1" --users，sqlmap.py -u "http://192.168.1.7/sql/union.php?id=1" --passwords
        - 8）获取当前网站数据库的名称，sqlmap.py -u "http://192.168.1.7/sql/union.php?id=1" --current-db
        - 9）获取当前网站数据库的用户名称，sqlmap.py -u "http://192.168.1.7/sql/union.php?id=1" --current-user
        - 参数
            - --level 5：探测等级，1~5等级
            - --is-dba：当前用户是否为管理权限，单会布尔值
            - --roles：列出数据库管理员角色
            - --referer：HTTP Referer头
            - --sql-shell：运行自定义SQL语句
            - --os-cmd，--os-shell：运行任意操作系统命令
            - --file-read：从数据库服务器中读物文件
            - --file-write，--file-dest：上传文件到数据库服务器中
- Burp Suite
    - 用Java开发的，运行时依赖JRE，下载后无需安装，直接双击BurpLoader.jar
    - Burp Suite代理工具是以拦截代理的方式，拦截所有通过代理的网络流量，拦截HTTP和HTTPS协议的流量
    - 设置：Burp Proxy默认本地代理端口为8080，Firefox浏览器设置HTTP代理为127.0.0.1，端口为8080
    - Proxy
        + Burp Proxy的拦截功能主要有Intercept选项卡中的Forward、Drop、Interception is on/off和Action构成
            * Forward表示将拦截的数据包或修改后的数据包发送至服务器端
            * Drop表示丢弃当前拦截的数据包
            * Interception is on表示拦截功能，单机后变为Interception is off，表示关闭拦截功能
            * 单击Action按钮，可以将数据包进一步发送到Spider、Scanner、Repeater、Intruder等功能组件做进一步的测试，同时也包含改变数据包请求方式及其body的编码等功能
    - Spider，爬取到的内容将在Target中展示
    - Decoder，编码解码及散列转换的工具
        + 支持URL、HTML、Base64、ASCII、十六进制、八进制、二进制和GZIP的格式转换
        + Hash散列支持SHA、SHA-224、SHA-256、SHA-384、SHA-512、MD2、MD5格式的转换
    - Scanner
        + 在默认设置下会扫描通过代理服务的请求，会在站点地图中显示请求的URL树，在其中一个URL上右击选择“Activily scan this host”，此时会弹出过滤设置，保持默认选项即可扫描整个域
        + 也可以在Proxy下的HTTP history中，选择某个节点上的链接URL并右击选择Do an active scan进行扫描
        + 对扫描结果选中需要进行分析的部分，将其发送到repeater模块中进行模拟提交分析和验证
        + 但scanner扫描完成后，可以右击站点地图选项下的链接，依次选择“issues”->”Report issues“选项，然后导出漏洞报告
        + 主要有主动扫描和被动扫描
    - Repeater
    - Comparer
    - Sequencer
- Nmap
    + 一款开放源代码的网络探测和安全审核工具
    + 它被设计用来快速扫描大型网络，包括主机探测与发现、开放的端口情况、操作系统与应用服务器指纹识别、WAF识别及常见安全漏洞，图形化界面是Zenmap，分布式架构为DNmap
    - 扫描参数（nmap --help）
        + -iL：从文件中导入目标主机或目标网段
        + -iR：随机选择目标主机
        + --exclude：后面跟的主机或网段将不在扫描范围内
        + --exclude：导入文件中的主机或网段将不在扫描范围中
        + -sL：List Scan列表扫描，仅列举指定目标IP，不进行主机发现
        + -sn：Ping Scan，只进行主机发现，不进行端口扫描
        + -Pn：将所有指定的主机视作已开启，跳过主机发现的过程
        + `-PS/PA/PU/PY [portlist]`：使用TCP SYN或SCTP INIT/ECHO方式来发现
        + -PE/PP/PM：使用ICMP echo、timestamp、netmask请求包发现主机
        + `-PO [portlist]`：使用IP协议包探测对方主机是否开启
        + -n/-R：-n表示不进行DNS解析，-R表示总是进行DNS解析
        + `--dns-servers <serv1 [,serv2,...]>`：指定DNS服务器
        + --system-dns：指定使用系统的DNS服务器
        + --traceroute：追踪每个路由节点
        + -sS/sT/sA/sW/sM：指定使用TCP SYN/Connect()/ACK/Window/Maimon scans的方式对目标主机进行扫描
        + -sU：指定使用UDP扫描的方式确定目标主机的UDP端口状况
        + -sN/sF/sX：指定使用TCP Null/FIN/Xmas scans秘密扫描的方式协助探测对方的TCP端口状态
        + `--scanflags <flags>`：定制TCP包的flags
        + `-sl <zombie host [: probeport]>`：指定使用Idle scan的方式扫描目标主机（前提是需要找到合适的zombie host）
        + -sY/sZ：使用SCTP INIT/COOKIE-ECHO扫描SCTP协议端口的开放情况
        + -sO：使用IP protocol扫描确定目标机支持的协议类型
        + `-b <FTP relay host>`：使用FTP bounce scan扫描方式
        + `-p <port ranges>`：扫描指定的端口
        + `-F`：Fast mode快速模式，仅扫描TOP 100的端口
        + -r：不进行端口打乱的操作（如无该参数，Nmap会将要扫描的端口以随机顺序的方式进行扫描，让Nmap的扫描不易被对方防火墙检测到）
        + `--top-ports <number>`：扫描开放概念最高的number个端口
        + `--port-ratio <ratio>`：扫描指定频率以上的端口
        + -sV：指定让Nmap进行版本侦测
        + `--version-intensity <level>`：指定版本侦测的强度（0~9），默认为7，数值越高，探测出的服务越准确，但是运行时间会比较长
        + --version-light：指定使用轻量级侦测方式（intensity 2）
        + --version-all：尝试使用所有的probes进行侦测（intensity 9）
        + --version-trace：显示出详细的版本侦测过程信息
        + 扫描格式：Nmap + 扫描参数 + 目标地址或网段，如 nmap-T4-A-v ip





























































